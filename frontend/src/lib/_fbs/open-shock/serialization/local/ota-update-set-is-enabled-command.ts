// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class OtaUpdateSetIsEnabledCommand {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):OtaUpdateSetIsEnabledCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsOtaUpdateSetIsEnabledCommand(bb:flatbuffers.ByteBuffer, obj?:OtaUpdateSetIsEnabledCommand):OtaUpdateSetIsEnabledCommand {
  return (obj || new OtaUpdateSetIsEnabledCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsOtaUpdateSetIsEnabledCommand(bb:flatbuffers.ByteBuffer, obj?:OtaUpdateSetIsEnabledCommand):OtaUpdateSetIsEnabledCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OtaUpdateSetIsEnabledCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

enabled():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startOtaUpdateSetIsEnabledCommand(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addEnabled(builder:flatbuffers.Builder, enabled:boolean) {
  builder.addFieldInt8(0, +enabled, +false);
}

static endOtaUpdateSetIsEnabledCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createOtaUpdateSetIsEnabledCommand(builder:flatbuffers.Builder, enabled:boolean):flatbuffers.Offset {
  OtaUpdateSetIsEnabledCommand.startOtaUpdateSetIsEnabledCommand(builder);
  OtaUpdateSetIsEnabledCommand.addEnabled(builder, enabled);
  return OtaUpdateSetIsEnabledCommand.endOtaUpdateSetIsEnabledCommand(builder);
}
}
