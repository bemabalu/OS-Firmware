// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class SetEstopEnabledCommandResult {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SetEstopEnabledCommandResult {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSetEstopEnabledCommandResult(bb:flatbuffers.ByteBuffer, obj?:SetEstopEnabledCommandResult):SetEstopEnabledCommandResult {
  return (obj || new SetEstopEnabledCommandResult()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSetEstopEnabledCommandResult(bb:flatbuffers.ByteBuffer, obj?:SetEstopEnabledCommandResult):SetEstopEnabledCommandResult {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SetEstopEnabledCommandResult()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

enabled():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

success():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startSetEstopEnabledCommandResult(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addEnabled(builder:flatbuffers.Builder, enabled:boolean) {
  builder.addFieldInt8(0, +enabled, +false);
}

static addSuccess(builder:flatbuffers.Builder, success:boolean) {
  builder.addFieldInt8(1, +success, +false);
}

static endSetEstopEnabledCommandResult(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSetEstopEnabledCommandResult(builder:flatbuffers.Builder, enabled:boolean, success:boolean):flatbuffers.Offset {
  SetEstopEnabledCommandResult.startSetEstopEnabledCommandResult(builder);
  SetEstopEnabledCommandResult.addEnabled(builder, enabled);
  SetEstopEnabledCommandResult.addSuccess(builder, success);
  return SetEstopEnabledCommandResult.endSetEstopEnabledCommandResult(builder);
}
}
